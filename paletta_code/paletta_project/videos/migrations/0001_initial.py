# Generated by Django 4.2.10 on 2025-04-02 10:51

from django.conf import settings
import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import django.utils.timezone
import videos.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('libraries', '0001_initial'),
        migrations.swappable_dependency(settings.AUTH_USER_MODEL),
    ]

    operations = [
        migrations.CreateModel(
            name='Category',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('description', models.TextField(blank=True, null=True)),
                ('created_at', models.DateTimeField(auto_now_add=True)),
                ('image', models.ImageField(blank=True, null=True, upload_to=videos.models.category_image_path)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='categories', to='libraries.library')),
            ],
            options={
                'verbose_name_plural': 'Categories',
                'ordering': ['name'],
                'unique_together': {('name', 'library')},
            },
        ),
        migrations.CreateModel(
            name='Tag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(max_length=25)),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='tags', to='libraries.library')),
            ],
            options={
                'unique_together': {('name', 'library')},
            },
        ),
        migrations.CreateModel(
            name='Video',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=25)),
                ('description', models.TextField(blank=True)),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('updated_at', models.DateTimeField(auto_now=True)),
                ('video_file', models.FileField(blank=True, help_text='Temporary storage before uploading to AWS S3 storage', null=True, upload_to=videos.models.video_upload_path, validators=[django.core.validators.FileExtensionValidator(allowed_extensions=['mp4', 'avi', 'mov', 'wmv', 'flv', 'mkv'])])),
                ('storage_url', models.URLField(blank=True, help_text='URL to the video in AWS S3 storage', max_length=500, null=True)),
                ('download_link', models.URLField(blank=True, help_text='Temporary download link for the video', max_length=500, null=True)),
                ('download_link_expiry', models.DateTimeField(blank=True, help_text='Expiration time for the download link', null=True)),
                ('storage_status', models.CharField(choices=[('pending', 'Pending Upload'), ('uploading', 'Uploading to Storage'), ('stored', 'Stored in Deep Storage'), ('failed', 'Upload Failed'), ('processing', 'Processing')], default='pending', help_text='Current status of the video in AWS S3 storage', max_length=20)),
                ('storage_reference_id', models.CharField(blank=True, help_text='Reference ID in the AWS S3 storage system', max_length=255, null=True)),
                ('thumbnail', models.ImageField(blank=True, null=True, upload_to=videos.models.thumbnail_upload_path)),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Duration in seconds', null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='Size in bytes', null=True)),
                ('views_count', models.PositiveIntegerField(default=0)),
                ('is_published', models.BooleanField(default=True)),
                ('category', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to='videos.category')),
                ('library', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='library_videos', to='libraries.library')),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='videos', to=settings.AUTH_USER_MODEL)),
            ],
        ),
        migrations.CreateModel(
            name='VideoLog',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('timestamp', models.DateTimeField(auto_now_add=True)),
                ('log_type', models.CharField(choices=[('upload', 'Video Uploaded'), ('process', 'Video Processing'), ('store', 'Video Stored in S3'), ('download', 'Video Download Requested'), ('delete', 'Video Deleted'), ('error', 'Error Occurred'), ('status_change', 'Status Changed')], max_length=20)),
                ('message', models.TextField()),
                ('ip_address', models.GenericIPAddressField(blank=True, null=True)),
                ('user_agent', models.TextField(blank=True, null=True)),
                ('file_size', models.PositiveIntegerField(blank=True, help_text='Size in bytes', null=True)),
                ('storage_status', models.CharField(blank=True, max_length=20, null=True)),
                ('duration', models.PositiveIntegerField(blank=True, help_text='Duration in seconds', null=True)),
                ('user', models.ForeignKey(null=True, on_delete=django.db.models.deletion.SET_NULL, related_name='video_logs', to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='logs', to='videos.video')),
            ],
            options={
                'verbose_name': 'Video Log',
                'verbose_name_plural': 'Video Logs',
                'ordering': ['-timestamp'],
            },
        ),
        migrations.CreateModel(
            name='Upload',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('upload_date', models.DateTimeField(default=django.utils.timezone.now)),
                ('status', models.CharField(choices=[('pending', 'Pending'), ('approved', 'Approved'), ('rejected', 'Rejected')], default='pending', max_length=20)),
                ('uploader', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploads', to=settings.AUTH_USER_MODEL)),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, related_name='uploads', to='videos.video')),
            ],
        ),
        migrations.CreateModel(
            name='VideoTag',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('tag', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.tag')),
                ('video', models.ForeignKey(on_delete=django.db.models.deletion.CASCADE, to='videos.video')),
            ],
            options={
                'unique_together': {('video', 'tag')},
            },
        ),
    ]
